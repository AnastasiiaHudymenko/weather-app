{"mappings":"AAAO,MAAMA,EAAO,CAClBC,IAAKC,SAASC,cAAc,yBAC5BC,KAAMF,SAASC,cAAc,4BAC7BE,KAAMH,SAASC,cAAc,4BAC7BG,YAAaJ,SAASC,cAAc,sBACpCI,iBAAkBL,SAASC,cAAc,8BACzCK,UAAWN,SAASC,cAAc,yBAClCM,SAAUP,SAASC,cAAc,yBACjCO,KAAMR,SAASC,cAAc,0BAC7BQ,YAAaT,SAASC,cAAc,cACpCS,IAAKV,SAASC,cAAc,gBAC5BU,IAAKX,SAASC,cAAc,eAC5BW,MAAOZ,SAASC,cAAc,4BAC9BY,eAAgBb,SAASc,iBAAiB,qBAC1CC,SAAUf,SAASC,cAAc,eACjCe,eAAgBhB,SAASc,iBAAiB,mBAC1CG,cAAejB,SAASc,iBAAiB,uBAG9BI,EAAS,CACpB,SACA,SACA,UACA,YACA,WACA,SACA,YCvBK,SAASC,EAAOC,GACrBC,EAAiBD,E,CAGZ,SAASE,EAAiBF,GAC/BC,EAAiBD,E,CAGnB,SAASC,GACPE,UAAUC,KAAEA,GACZC,SAASC,OACPA,EAAMC,SACNA,EAAQpB,SACRA,EAAQqB,YACRA,EACAC,WAAWC,KAAEA,EAAIC,KAAEA,IAErBC,UAAYC,YAAaC,KAEzB,MAAMC,EAAOT,EAAOU,UACdC,EAAc,IAAIC,KAClBC,EAAMF,EAAYG,SACxB1C,EAAKC,IAAI0C,YAAcvB,EAAOqB,GAC9BzC,EAAKI,KAAKuC,YAAc,GAAGJ,EAAYK,aAAaxB,EAAOqB,GAAKI,MAC9D,EACA,MACGN,EAAYO,gBAEjB9C,EAAKK,KAAKsC,YAAc,GAAGjB,IAC3B1B,EAAKM,YAAYqC,YAAc,GAAGN,OAClCrC,EAAKY,IAAImC,IAAM,GAAGf,IAClBhC,EAAKO,iBAAiBoC,YAAc,GAAGV,IAEvCjC,EAAKQ,UAAUmC,YAAc,GAAGb,EAAYQ,eAC5CtC,EAAKS,SAASkC,YAAc,GAAGlC,KAC/BT,EAAKU,KAAKiC,YAAc,GAAGd,SAE3BO,EAASY,SAAQ,CAACC,EAAIC,KACpB,MACMjD,EADO,IAAIuC,KAAK,GAAGS,EAAG7C,QACXsC,SACjB1C,EAAKkB,eAAegC,GAAGP,YAAc,GAAGvB,EAAOnB,GAAK4C,MAAM,EAAG,KAC7D7C,EAAKmB,cAAc+B,GAAGP,YAAc,GAAGM,EAAGhD,IAAIkD,UAAUb,eACxDtC,EAAKe,eAAemC,GAAGH,IAAM,GAAGE,EAAGhD,IAAI8B,UAAUC,MAAM,G,CCzClDoB,MAAM,+FAAsDC,MACjEC,IACE,GAAKA,EAAKC,GAGR,OAAOD,EAAKE,OAFZ,MAAM,IAAIC,MAAMH,EAAKI,WAEH,ICFvBL,MAAK/B,GAAQD,EAAOC,KACpBqC,OAAMC,GAAOC,QAAQC,IAAIF,KAE5B5D,EAAKa,IAAIkD,iBAAiB,SAC1B,YDI0BC,ECHRhE,EAAKc,MAAMmD,MDIpBb,MAAM,mFAA0CY,YAAiBX,MACtEC,IACE,GAAKA,EAAKC,GAGR,OAAOD,EAAKE,OAFZ,IAAIC,MAAMH,EAAKI,WAEG,KCPrBL,KAAK7B,GACLmC,OAAMC,GAAOC,QAAQC,IAAIF,KAE5B5D,EAAKc,MAAMmD,MAAQ,GDFd,IAAmBD,C","sources":["src/refs.js","src/createApi.js","src/server-api.js","src/index.js"],"sourcesContent":["export const refs = {\n  day: document.querySelector('.page-main__day-title'),\n  date: document.querySelector('.page-main__day-of-month'),\n  city: document.querySelector('.page-main__location-now'),\n  currentTemp: document.querySelector('.page-main__degree'),\n  currentStutusWth: document.querySelector('.page-main__status-weather'),\n  feelslike: document.querySelector('.list-decs__info--cld'),\n  humidity: document.querySelector('.list-decs__info--hum'),\n  wind: document.querySelector('.list-decs__info--wind'),\n  divPageMain: document.querySelector('.page-main'),\n  img: document.querySelector('.img-current'),\n  btn: document.querySelector('.btn-search'),\n  input: document.querySelector('.page-second__btn-search'),\n  imgCurrentMini: document.querySelectorAll('.img-current-mini'),\n  svgCurIc: document.querySelector('.svg-cur-ic'),\n  currentDaymini: document.querySelectorAll('.list-info__day'),\n  currentDegree: document.querySelectorAll('.list-info__degree'),\n};\n\nexport const dayArr = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","import { dayArr } from './refs';\nimport { refs } from './refs';\n\nexport function create(data) {\n  createWeatherAll(data);\n}\n\nexport function createSearchUser(data) {\n  createWeatherAll(data);\n}\n\nfunction createWeatherAll({\n  location: { name },\n  current: {\n    temp_c,\n    wind_kph,\n    humidity,\n    feelslike_c,\n    condition: { icon, text },\n  },\n  forecast: { forecastday: dayOfday },\n}) {\n  const temp = temp_c.toFixed();\n  const currentDate = new Date();\n  const day = currentDate.getDay();\n  refs.day.textContent = dayArr[day];\n  refs.date.textContent = `${currentDate.getDate()} ${dayArr[day].slice(\n    0,\n    3\n  )} ${currentDate.getFullYear()}`;\n\n  refs.city.textContent = `${name}`;\n  refs.currentTemp.textContent = `${temp} °C`;\n  refs.img.src = `${icon}`;\n  refs.currentStutusWth.textContent = `${text}`;\n\n  refs.feelslike.textContent = `${feelslike_c.toFixed()} °C`;\n  refs.humidity.textContent = `${humidity}%`;\n  refs.wind.textContent = `${wind_kph} km/h`;\n\n  dayOfday.forEach((el, i) => {\n    const date = new Date(`${el.date}`);\n    const day = date.getDay();\n    refs.currentDaymini[i].textContent = `${dayArr[day].slice(0, 3)}`;\n    refs.currentDegree[i].textContent = `${el.day.avgtemp_c.toFixed()} °C`;\n    refs.imgCurrentMini[i].src = `${el.day.condition.icon}`;\n  });\n}\n","const key = '3d258d8aad0e40d181470018222812';\nconst BASE_URL = 'http://api.weatherapi.com/v1';\n\nexport function getFeatch() {\n  return fetch(`${BASE_URL}/forecast.json?key=${key}&q=Kiev&days=3`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      } else {\n        return resp.json();\n      }\n    }\n  );\n}\n\nexport function userFetch(search) {\n  return fetch(`${BASE_URL}/forecast.json?key=${key}&q=${search}&days=3`).then(\n    resp => {\n      if (!resp.ok) {\n        new Error(resp.statusText);\n      } else {\n        return resp.json();\n      }\n    }\n  );\n}\n","import { refs } from './refs';\nimport { getFeatch } from './server-api';\nimport { create } from './createApi';\nimport { userFetch } from './server-api';\nimport { createSearchUser } from './createApi';\n\ngetFeatch()\n  .then(data => create(data))\n  .catch(err => console.log(err));\n\nrefs.btn.addEventListener('click', onInput);\nfunction onInput() {\n  let userInput = refs.input.value;\n  userFetch(userInput)\n    .then(createSearchUser)\n    .catch(err => console.log(err));\n\n  refs.input.value = '';\n}\n"],"names":["$94aaf10e6bfe0334$export$21666b427502ea6d","day","document","querySelector","date","city","currentTemp","currentStutusWth","feelslike","humidity","wind","divPageMain","img","btn","input","imgCurrentMini","querySelectorAll","svgCurIc","currentDaymini","currentDegree","$94aaf10e6bfe0334$export$2ef14f379bf8fd9f","$6a0b004670a9df17$export$185802fd694ee1f5","data","$6a0b004670a9df17$var$createWeatherAll","$6a0b004670a9df17$export$a9206e63bcf156f9","location","name","current","temp_c","wind_kph","feelslike_c","condition","icon","text","forecast","forecastday","dayOfday","temp","toFixed","currentDate","Date","day1","getDay","textContent","getDate","slice","getFullYear","src","forEach","el","i","avgtemp_c","fetch","then","resp","ok","json","Error","statusText","catch","err","console","log","addEventListener","search","value"],"version":3,"file":"index.91a05b87.js.map"}