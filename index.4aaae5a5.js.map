{"mappings":"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","sources":["src/refs.js","src/server-api.js","src/createApi.js","src/index.js"],"sourcesContent":["export const refs = {\n  day: document.querySelector('.page-main__day-title'),\n  date: document.querySelector('.page-main__day-of-month'),\n  city: document.querySelector('.page-main__location-now'),\n  currentTemp: document.querySelector('.page-main__degree'),\n  currentStutusWth: document.querySelector('.page-main__status-weather'),\n  feelslike: document.querySelector('.list-decs__info--cld'),\n  humidity: document.querySelector('.list-decs__info--hum'),\n  wind: document.querySelector('.list-decs__info--wind'),\n  divPageMain: document.querySelector('.page-main'),\n  img: document.querySelector('.img-current'),\n  btn: document.querySelector('.btn-search'),\n  input: document.querySelector('.page-second__btn-search'),\n  imgCurrentMini: document.querySelectorAll('.img-current-mini'),\n  svgCurIc: document.querySelector('.svg-cur-ic'),\n  currentDaymini: document.querySelectorAll('.list-info__day'),\n  currentDegree: document.querySelectorAll('.list-info__degree'),\n  list: document.querySelectorAll('.list-info__item'),\n  btnArrow: document.querySelector('.btn-arrow'),\n};\n\nexport const dayArr = [\n  'Sunday',\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n];\n","const key = '3d258d8aad0e40d181470018222812';\nconst BASE_URL = 'http://api.weatherapi.com/v1';\n\nexport function getFeatch() {\n  return fetch(`${BASE_URL}/forecast.json?key=${key}&q=Kiev&days=3`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      } else {\n        return resp.json();\n      }\n    }\n  );\n}\n\nexport function userFetch(search) {\n  return fetch(`${BASE_URL}/forecast.json?key=${key}&q=${search}&days=3`).then(\n    resp => {\n      if (!resp.ok) {\n        new Error(resp.statusText);\n      } else {\n        return resp.json();\n      }\n    }\n  );\n}\n","import { dayArr } from './refs';\nimport { refs } from './refs';\n\nexport function createStaticWeatther(data) {\n  createWeatherAll(data);\n}\n\nexport function createSearchUser(data) {\n  createWeatherAll(data);\n}\n\nfunction createWeatherAll({\n  location: { name },\n  current: {\n    temp_c,\n    wind_kph,\n    humidity,\n    feelslike_c,\n    condition: { icon, text },\n  },\n  forecast: { forecastday: dayOfday },\n}) {\n  refs.list[0].classList.add('list-info__item--current');\n  const temp = temp_c.toFixed();\n  const currentDate = new Date();\n  const day = currentDate.getDay();\n  refs.day.textContent = dayArr[day];\n  refs.date.textContent = `${currentDate.getDate()} ${dayArr[day].slice(\n    0,\n    3\n  )} ${currentDate.getFullYear()}`;\n\n  refs.city.textContent = `${name}`;\n  refs.currentTemp.textContent = `${temp} °C`;\n  refs.img.src = `${icon}`;\n  refs.currentStutusWth.textContent = `${text}`;\n\n  refs.feelslike.textContent = `${feelslike_c.toFixed()} °C`;\n  refs.humidity.textContent = `${humidity}%`;\n  refs.wind.textContent = `${wind_kph} km/h`;\n\n  dayOfday.forEach((el, i) => {\n    const date = new Date(`${el.date}`);\n    const day = date.getDay();\n    refs.currentDaymini[i].textContent = `${dayArr[day].slice(0, 3)}`;\n    refs.currentDegree[i].textContent = `${el.day.avgtemp_c.toFixed()} °C`;\n    refs.imgCurrentMini[i].src = `${el.day.condition.icon}`;\n  });\n}\n","import { refs } from './refs';\nimport { getFeatch } from './server-api';\nimport { createStaticWeatther } from './createApi';\nimport { userFetch } from './server-api';\nimport { createSearchUser } from './createApi';\n\ngetFeatch()\n  .then(data => createStaticWeatther(data))\n  .catch(err => console.log(err));\n\nrefs.btn.addEventListener('click', onInput);\nfunction onInput() {\n  let userInput = refs.input.value;\n  userFetch(userInput)\n    .then(createSearchUser)\n    .catch(err => console.log(err));\n\n  refs.input.value = '';\n}\nrefs.btnArrow.addEventListener('click', onClickBtn);\n\n// function onClickBtn() {\n//   refs.list.forEach((el, i) => {});\n//   console.log(refs.list[1]);\n//   refs.list[1].classList.add('list-info__item--current');\n// }\n"],"names":["$b35ad1aac71df356$export$21666b427502ea6d","day","document","querySelector","date","city","currentTemp","currentStutusWth","feelslike","humidity","wind","divPageMain","img","btn","input","imgCurrentMini","querySelectorAll","svgCurIc","currentDaymini","currentDegree","list","btnArrow","$b35ad1aac71df356$export$2ef14f379bf8fd9f","$3036b443c0267283$var$key","$3036b443c0267283$var$BASE_URL","$5dc0e6db422dd385$export$3252def187a4260a","data","$5dc0e6db422dd385$var$createWeatherAll","$5dc0e6db422dd385$export$a9206e63bcf156f9","param","name","location","_current","current","temp_c","wind_kph","feelslike_c","_condition","condition","icon","text","dayOfday","forecast","forecastday","classList","add","temp","toFixed","currentDate","Date","day1","getDay","textContent","concat","getDate","slice","getFullYear","src","forEach","el","i","avgtemp_c","fetch","then","resp","ok","json","Error","statusText","catch","err","console","log","addEventListener","search","value","onClickBtn"],"version":3,"file":"index.4aaae5a5.js.map"}